{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Polygons"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`scikit-geometry` can handle polygons, as well as polygons with holes. Polygons can be created from lists of points."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import skgeom as sg\n",
    "from skgeom.draw import draw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly = sg.Polygon([sg.Point2(0, 0), sg.Point2(0, 3), sg.Point2(3, 3)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw(poly)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can check wether a given point is _inside_ the polygon (a negative sign means outside, positive means inside):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sign.NEGATIVE"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.oriented_side(sg.Point2(1, 2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Sign.POSITIVE"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.oriented_side(sg.Point2(2, 1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Calculate the bounding box"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Bbox_2(0, 0, 3, 3)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.bbox()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Compute the area of the polygon. Note: the sign depends on the order of the polygon (clockwise → negative, counter-clockwise → positive)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-4.5"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.area()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.orientation() == sg.Sign.CLOCKWISE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.is_convex()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poly.is_simple()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Polygon with Holes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can cut out an area of a Polygon by adding one or multiple holes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "hole = sg.Polygon([\n",
    "    sg.Point2(0.5, 2.5), \n",
    "    sg.Point2(1.0, 2.5),\n",
    "    sg.Point2(1.0, 2.0), \n",
    "    sg.Point2(0.5, 2.0)])\n",
    "poly_with_hole = sg.PolygonWithHoles(poly, [hole])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from skgeom.draw import to_list_of_tuples, draw_polygon\n",
    "import matplotlib.patches as patches\n",
    "from matplotlib.path import Path\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "def draw_poly_with_hole(poly):\n",
    "    if isinstance(poly, list):\n",
    "        for p in poly:\n",
    "            draw_poly_with_hole(p)\n",
    "    else:\n",
    "        draw_polygon(poly.outer_boundary(), facecolor=\"lightgray\")\n",
    "        for hole in poly.holes:\n",
    "            hole_length = 0\n",
    "            vertices = to_list_of_tuples(hole.vertices) + [(0, 0)]\n",
    "            for v in hole.vertices:\n",
    "                hole_length += 1\n",
    "\n",
    "            codes = [Path.MOVETO] + [Path.LINETO] * (hole_length - 1) + [Path.CLOSEPOLY]\n",
    "            path = Path(vertices, codes)\n",
    "            plt.gca().add_patch(\n",
    "                patches.PathPatch(path, facecolor=\"white\", linewidth=2)\n",
    "            )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_poly_with_hole(poly_with_hole)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Boolean operations on Polygons\n",
    "\n",
    "*scikit-geometry* supports boolean operations on polygons, such as computing the union, difference and intersection between two polygons (or polygons with holes)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "poly1 = sg.Polygon([sg.Point2(0, 0), sg.Point2(0, 3), sg.Point2(3, 3), sg.Point2(3, 0)])\n",
    "poly2 = sg.Polygon([sg.Point2(2, 2), sg.Point2(2, 5), sg.Point2(5, 5), sg.Point2(5, 2)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_polygon(poly1, facecolor='red')\n",
    "draw_polygon(poly2, facecolor='blue')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "from skgeom import boolean_set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_poly_with_hole(boolean_set.join(poly1, poly2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD4CAYAAAD8Zh1EAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAN+klEQVR4nO3d0Ytd5b3G8e9zkiktKOQiA4YYTQ/kpja0hsFGhEM49ICK4I0X9qKCN6FiQaE3xQtL/4FeWIshoLRCaSloJZSE4kWL7YW2Y4hGTXvIKRQHA06VJg3KKSm/czErstnZM3tNZk1m9nu+H9hkrfW+e+3f64vPrLxZe1aqCknS7Pu3rS5AkjQMA12SGmGgS1IjDHRJaoSBLkmN2LlVH7x79+7av3//Vn28JM2kN998829VNT+pbcsCff/+/SwuLm7Vx0vSTEry19XaXHKRpEYY6JLUCANdkhphoEtSIwx0SWrE1EBP8vkkf0jyVpJ3k3x/Qp8keSbJ+SRvJzm0OeVKklbT57bF/wX+s6ouJ5kDfp/kVFW9PtLnPuBA9/oa8Fz3pyTpBpka6LXy+3Uvd7tz3Wv8d+4+CLzY9X09ya4ke6rqwqDVAkmGPqXUNH9F9v8fvdbQk+xIcgb4EHi1qt4Y67IXeH9kf6k7Nn6eo0kWkywuLy9fb82SpAl6fVO0qv4FfDXJLuCXSb5cVe+MdJl02XzNZUFVHQeOAywsLGzosuHs2bMbebvUvIMHD251CbrB1nWXS1X9HfgtcO9Y0xKwb2T/VuCDDVUmSVqXPne5zHdX5iT5AvB14E9j3U4Aj3R3uxwGLm7G+rkkaXV9llz2AD9JsoOVHwC/qKpfJfkWQFUdA04C9wPngU+ARzepXknSKvrc5fI2cOeE48dGtgt4fNjSJEnr4TdFJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjZga6En2JflNknNJ3k3yxIQ+R5JcTHKmez29OeVKklazs0efK8B3qup0kpuBN5O8WlXvjfX7XVU9MHyJkqQ+pl6hV9WFqjrdbf8DOAfs3ezCJEnrs6419CT7gTuBNyY0353krSSnktyxyvuPJllMsri8vLzuYiVJq+sd6EluAl4CnqyqS2PNp4Hbq+orwA+BVyado6qOV9VCVS3Mz89fb82SpAl6BXqSOVbC/KdV9fJ4e1VdqqrL3fZJYC7J7kErlSStqc9dLgGeB85V1Q9W6XNL148kd3Xn/WjIQiVJa+tzl8s9wDeBs0nOdMeeAm4DqKpjwEPAY0muAJ8CD1dVbUK9kqRVTA30qvo9kCl9ngWeHaooSdL6+U1RSWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSI6YGepJ9SX6T5FySd5M8MaFPkjyT5HySt5Mc2pxyJUmr2dmjzxXgO1V1OsnNwJtJXq2q90b63Acc6F5fA57r/pQk3SBTA72qLgAXuu1/JDkH7AVGA/1B4MWqKuD1JLuS7OneK2kLJdnqEjTBSlwOa11r6En2A3cCb4w17QXeH9lf6o6Nv/9oksUki8vLy+urVJK0pj5LLgAkuQl4CXiyqi6NN094yzU/fqrqOHAcYGFhYfgfT5I+c/bs2a0uQRMcPHhw087d6wo9yRwrYf7Tqnp5QpclYN/I/q3ABxsvT5LUV5+7XAI8D5yrqh+s0u0E8Eh3t8th4KLr55J0Y/VZcrkH+CZwNsmZ7thTwG0AVXUMOAncD5wHPgEeHb5USdJa+tzl8nsmr5GP9ing8aGKkiStn98UlaRGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNWJqoCd5IcmHSd5Zpf1IkotJznSvp4cvU5I0zc4efX4MPAu8uEaf31XVA4NUJEm6LlOv0KvqNeDjG1CLJGkDhlpDvzvJW0lOJbljtU5JjiZZTLK4vLw80EdLkmCYQD8N3F5VXwF+CLyyWseqOl5VC1W1MD8/P8BHS5Ku2nCgV9WlqrrcbZ8E5pLs3nBlkqR12XCgJ7klSbrtu7pzfrTR80qS1mfqXS5JfgYcAXYnWQK+B8wBVNUx4CHgsSRXgE+Bh6uqNq1iSdJEUwO9qr4xpf1ZVm5rlCRtIb8pKkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJasTUQE/yQpIPk7yzSnuSPJPkfJK3kxwavkxJ0jR9rtB/DNy7Rvt9wIHudRR4buNlSZLWa2qgV9VrwMdrdHkQeLFWvA7sSrJnqAIlSf0MsYa+F3h/ZH+pO3aNJEeTLCZZXF5eHuCjJUlXDRHomXCsJnWsquNVtVBVC/Pz8wN8tCTpqiECfQnYN7J/K/DBAOeVJK3DEIF+Aniku9vlMHCxqi4McF5J0jrsnNYhyc+AI8DuJEvA94A5gKo6BpwE7gfOA58Aj25WsZKk1U0N9Kr6xpT2Ah4frCJJ0nXxm6KS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RG9Ar0JPcm+XOS80m+O6H9SJKLSc50r6eHL1WStJad0zok2QH8CPgvYAn4Y5ITVfXeWNffVdUDm1CjJKmHPlfodwHnq+ovVfVP4OfAg5tbliRpvfoE+l7g/ZH9pe7YuLuTvJXkVJI7Jp0oydEki0kWl5eXr6NcSdJq+gR6Jhyrsf3TwO1V9RXgh8Ark05UVceraqGqFubn59dXqSRpTX0CfQnYN7J/K/DBaIequlRVl7vtk8Bckt2DVSlJmqpPoP8ROJDki0k+BzwMnBjtkOSWJOm27+rO+9HQxUqSVjf1LpequpLk28CvgR3AC1X1bpJvde3HgIeAx5JcAT4FHq6q8WUZSdImmhro8NkyysmxY8dGtp8Fnh22NEnSevhNUUlqhIEuSY0w0CWpEQa6JDXCQJekRhjoktQIA12SGmGgS1IjDHRJaoSBLkmNMNAlqREGuiQ1wkCXpEYY6JLUCANdkhphoEtSIwx0SWqEgS5JjTDQJakRBrokNcJAl6RGGOiS1AgDXZIaYaBLUiN6BXqSe5P8Ocn5JN+d0J4kz3Ttbyc5NHypkqS1TA30JDuAHwH3AV8CvpHkS2Pd7gMOdK+jwHMD1ylJmmJnjz53Aeer6i8ASX4OPAi8N9LnQeDFqirg9SS7kuypqguDV9w5ePDgZp1akmZSnyWXvcD7I/tL3bH19iHJ0SSLSRaXl5fXW6skaQ19rtAz4VhdRx+q6jhwHGBhYeGa9j5W/hIgSRrX5wp9Cdg3sn8r8MF19JEkbaI+gf5H4ECSLyb5HPAwcGKszwngke5ul8PAxc1cP5ckXWvqkktVXUnybeDXwA7ghap6N8m3uvZjwEngfuA88Anw6OaVLEmapM8aOlV1kpXQHj12bGS7gMeHLU2StB5+U1SSGmGgS1IjDHRJaoSBLkmNyFZ9USfJMvDX63z7buBvA5azlRzL9tTKWFoZBziWq26vqvlJDVsW6BuRZLGqFra6jiE4lu2plbG0Mg5wLH245CJJjTDQJakRsxrox7e6gAE5lu2plbG0Mg5wLFPN5Bq6JOlas3qFLkkaY6BLUiO2daC39HDqHmM5kuRikjPd6+mtqHOaJC8k+TDJO6u0z9KcTBvLrMzJviS/SXIuybtJnpjQZybmpedYZmVePp/kD0ne6sby/Ql9hp2XqtqWL1Z+Ve//AP8OfA54C/jSWJ/7gVOsPDHpMPDGVte9gbEcAX611bX2GMt/AIeAd1Zpn4k56TmWWZmTPcChbvtm4L9n+P+VPmOZlXkJcFO3PQe8ARzezHnZzlfonz2cuqr+CVx9OPWozx5OXVWvA7uS7LnRhfbQZywzoapeAz5eo8uszEmfscyEqrpQVae77X8A57j2mb4zMS89xzITuv/Wl7vdue41fhfKoPOynQN9sIdTbwN967y7++vZqSR33JjSBjcrc9LXTM1Jkv3AnaxcDY6auXlZYywwI/OSZEeSM8CHwKtVtanz0usBF1tksIdTbwN96jzNyu9ouJzkfuAV4MCmVza8WZmTPmZqTpLcBLwEPFlVl8abJ7xl287LlLHMzLxU1b+ArybZBfwyyZeravTfbAadl+18hd7Sw6mn1llVl67+9axWnhA1l2T3jStxMLMyJ1PN0pwkmWMlAH9aVS9P6DIz8zJtLLM0L1dV1d+B3wL3jjUNOi/bOdBbejj11LEkuSVJuu27WJmbj254pRs3K3My1azMSVfj88C5qvrBKt1mYl76jGWG5mW+uzInyReArwN/Gus26Lxs2yWXaujh1D3H8hDwWJIrwKfAw9X9M/h2kuRnrNxlsDvJEvA9Vv6xZ6bmBHqNZSbmBLgH+CZwtluvBXgKuA1mbl76jGVW5mUP8JMkO1j5ofOLqvrVZmaYX/2XpEZs5yUXSdI6GOiS1AgDXZIaYaBLUiMMdElqhIEuSY0w0CWpEf8H834bv/Ch9cwAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_poly_with_hole(boolean_set.difference(poly1, poly2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_poly_with_hole(boolean_set.symmetric_difference(poly1, poly2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw_poly_with_hole(boolean_set.intersect(poly1, poly2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Minkowski Sum of 2 Polygons\n",
    "\n",
    "We can compute the minkowski sum of two polygons easily (i.e. offsetting a polygon with another polygon)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "from skgeom import minkowski"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "p1 = sg.Polygon([sg.Point2(-1, -1), sg.Point2(1, -1), sg.Point2(0, 1)])\n",
    "p2 = sg.Polygon([sg.Point2(3, -1), sg.Point2(5, -1), sg.Point2(5, 1), sg.Point2(3, 1)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "draw(p1, facecolor='red')\n",
    "draw(p2, facecolor='blue')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = minkowski.minkowski_sum(p1, p2)\n",
    "draw_poly_with_hole(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
